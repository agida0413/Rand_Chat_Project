
    upstream backend_member {
        server ${BACKEND_INSTANCE_MEMBER_1};

    }

    upstream backend_match {
        server ${BACKEND_INSTANCE_MATCH_1};
        server ${BACKEND_INSTANCE_MATCH_2};
     }


    upstream frontend {
        server ${FRONT_END_INSTANCE_1};
    }

    server {
        listen 80;

         client_max_body_size 5M;  # 요청 크기를 5MB로 제한
         server_name randchat.o-r.kr;

           location /.well-known/acme-challenge/ {
               root /var/www/certbot;
           }

           location / {
               return 301 https://$host$request_uri;
           }
       
    }


  server {
        listen 443 ssl;

         client_max_body_size 5M;  # 요청 크기를 5MB로 제한
         server_name randchat.o-r.kr;

        ssl_certificate /etc/letsencrypt/live/randchat.o-r.kr/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/randchat.o-r.kr/privkey.pem;

  

           location / {
                     proxy_pass http://frontend;  # upstream 블록을 참조하여 요청을 백엔드 서버로 전달
                     proxy_set_header Host $host;
                     proxy_set_header X-Real-IP $remote_addr;
                     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                     proxy_set_header X-Forwarded-Proto $scheme;
           }

             location /api {
                                proxy_pass http://backend_member;  # upstream 블록을 참조하여 요청을 백엔드 서버로 전달
                                proxy_set_header Host $host;
                                proxy_set_header X-Real-IP $remote_addr;
                                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                                proxy_set_header X-Forwarded-Proto $scheme;
             }


             location /match {
                                 proxy_pass http://backend_match;  # upstream 블록을 참조하여 요청을 백엔드 서버로 전달
                                 proxy_set_header Host $host;
                                 proxy_set_header X-Real-IP $remote_addr;
                                 proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                                 proxy_set_header X-Forwarded-Proto $scheme;
                                 proxy_buffering off;              # SSE를 위한 버퍼링 비활성화
                                 proxy_read_timeout 3600s;         # 백엔드 응답 대기 시간 설정
                                 proxy_send_timeout 3600s;         # 클라이언트로 데이터 전송 대기 시간 설정
                                 proxy_set_header Connection '';   # SSE 지속 연결 지원
              }
    }

