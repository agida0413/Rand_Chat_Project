<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="rand.api.domain.member.mapper.MemberMapper">


    <select id="emailDuplicateCheck" parameterType="Members" resultType="int">
        /* Membermapper.xml.emailDuplicateCheckInJoinForm  이메일 개수 리턴 By email */
        SELECT  COUNT(usr_id)
        FROM MEMBERS
        WHERE email = #{email}
    </select>


    <select id="userNameDuplicateCheck" parameterType="Members" resultType="int">
        /* Membermapper.xml.userNameDuplicateCheck  아이디 개수 리턴 By username*/
        SELECT  COUNT(usr_id)
        FROM MEMBERS
        WHERE username = #{username}
    </select>

    <select id="nickNameDuplicateCheck" parameterType="Members" resultType="int">
        /* Membermapper.xml.nickNameDuplicateCheck 닉네임 개수 리턴 By nickName */
        SELECT  COUNT(usr_id)
        FROM MEMBERS
        WHERE nick_name = #{nickName}
    </select>

    <insert id="join" parameterType="Members">
        /* Membermapper.xml.join 회원가입 */
        INSERT INTO MEMBERS(username,password,email,nick_name,sex,birth)
        VALUES(
               #{username}
              ,#{password}
              ,#{email}
              ,#{nickName}
              ,#{sex}
              ,#{birth}
              )
    </insert>


    <select id="findId" parameterType="Members" resultType="ResFindIdDTO">
        /* Membermapper.xml.FindId 아이디 찾기 */
       SELECT CONCAT(SUBSTRING(username, 1, LENGTH(username) - 4), '****') AS username
         FROM MEMBERS
        WHERE 1=1
          AND email = #{email}
          AND nick_name = #{nickName}
    </select>

    <select id="findByNnAndEmail" parameterType="Members" resultType="int">
        /* Membermapper.xml.findByNnAndEmail  회원정보개수 리턴 By email and Nickname  */
         SELECT COUNT(usr_id)
           FROM MEMBERS
          WHERE 1=1
            AND email = #{email}
            AND nick_name = #{nickName}

    </select>

    <update id="resetNewPassword" parameterType="Members">
        /* Membermapper.xml.resetNewPassword 새 비밀번호 업데이트  */
        UPDATE MEMBERS SET
               password = #{password}
         WHERE email = #{email}
    </update>

    <select id="findByUsrAndEmail" parameterType="Members" resultType="Members">
        /* Membermapper.xml.findByUsrAndEmail  회원정보 리턴 By email and username  */
        SELECT  email
              , password
              , state
           FROM MEMBERS
          WHERE 1=1
            AND email = #{email}
            AND username = #{username}
    </select>


    <select id="findByEmail" parameterType="Members" resultType="Members">
        /* Membermapper.xml.findByEmail  회원정보 리턴 By email   */
        SELECT  email
              , password
              , state
           FROM MEMBERS
          WHERE 1=1
            AND email = #{email}

    </select>


    <update id="activationMem" parameterType="Members">
        UPDATE MEMBERS SET
               state = #{state}
         WHERE email = #{email}
    </update>

</mapper>