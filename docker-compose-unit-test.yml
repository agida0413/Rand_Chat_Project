version: '3.8'

services:
  nginx:
    build:
      context: ./nginx/dev
      dockerfile: Dockerfile
    restart: always
    ports:
      - "80:80"
    depends_on:
      -  backend_member
      -  backend_match1
      -  backend_match2
    container_name: nginx
    networks: 
     - app_network
  backend_match1:
    build:
      context: ./backend
      dockerfile: Dockerfile-match-unit-test
    ports:
      - "8081:8080"
    depends_on:
      - mysql
      - redis-master-1
    container_name: backend_match1
    networks: 
     - app_network
    env_file:
      - .env  # .env 파일을 로드
    environment: 
      - INSTANCE_ID=server1 
      - SPRING_PROFILES_ACTIVE=dev
  mysql:
    image: mysql:8.0
    container_name: mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: "1234"
    ports:
      - "3307:3306"
    volumes:
      - ./mysqlevn/masterdb:/var/lib/mysql
      - ./mysql/init.sql:/docker-entrypoint-initdb.d/init.sql
    command:
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_unicode_ci
    networks: 
     - app_network  
  redis-master-1:
    image: redis:alpine
    ports:
      - "6379:6379"
    container_name: redis-master-1  
    networks: 
     - app_network

networks:
  app_network:
    driver: bridge    
   
  

  